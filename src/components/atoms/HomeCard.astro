---
import { InfoIcon, RightIcon } from "../icons/homeIcons";
import { home } from "@es";

const { data } = Astro.props;
const link = data.link;
---

<script>
  class AstroCard extends HTMLElement {
    constructor() {
      super();

      // Read the message from the data attribute.
      const link = this.dataset.link!;

      const aside = this.querySelector("aside")!;
      aside.addEventListener("click", () => {
        window.location.href = link;
      });

      const header = this.querySelector("header")!;
      header.addEventListener("click", () => {
        window.location.href = link;
      });
    }
  }

  customElements.define("astro-card", AstroCard);
</script>

<astro-card
  data-link={link}
  class="flex cursor-pointer w-full max-w-80 bg-zinc-800 justify-center rounded-lg shadow-xl px-2 py-2 transition-colors hover:bg-zinc-700"
>
  <content class="flex flex-col gap-2">
    <header class="text-white text-xl font-semibold text-pretty">
      {data.title}
    </header>
    <footer class="flex items-center gap-1 text-blue-500 font-semibold">
      <button
        type="button"
        data-modal-target=`default-modal-${data.id}`
        data-modal-toggle=`default-modal-${data.id}`
        class="hover:underline">{home.cardInfo}</button
      >
      <InfoIcon size={16} />
    </footer>
  </content>

  <aside
    class="flex h-full items-center text-white hover:text-gray-400 transition-colors"
  >
    <RightIcon size={24} />
  </aside>
</astro-card>

<!-- Main modal -->
<div
  id=`default-modal-${data.id}`
  tabindex="-1"
  aria-hidden="true"
  class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 w-full md:inset-0 h-[calc(100%-1rem)] max-h-full"
>
  <div
    class="absolute top-[40%] left-[50%] -translate-x-2/4 -translate-y-2/4 p-4 w-full max-w-xl max-h-full"
  >
    <!-- Modal content -->
    <div class="relative bg-white rounded-lg shadow dark:bg-lime-900">
      <!-- Modal header -->
      <div
        class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-lime-700"
      >
        <h3 class="text-xl font-semibold text-gray-900 dark:text-white">
          {home.cardInfo}
        </h3>
        <button
          type="button"
          class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
          data-modal-hide=`default-modal-${data.id}`
        >
          <svg
            class="w-3 h-3"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 14 14"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
          </svg>
          <span class="sr-only">Close modal</span>
        </button>
      </div>
      <!-- Modal body -->
      <div class="p-4 md:p-5 space-y-4">
        <h2
          class="text-base leading-relaxed text-gray-600 dark:text-gray-200 font-semibold"
        >
          {data.title}
        </h2>
        <p class="text-base leading-relaxed text-gray-600 dark:text-gray-200">
          {data.whatHow}
        </p>
        <p class="text-base leading-relaxed text-gray-600 dark:text-gray-200">
          {data.agricultor}
        </p>
        <p class="text-base leading-relaxed text-gray-600 dark:text-gray-200">
          {data.productor}
        </p>
      </div>
      <!-- Modal footer -->
      <div
        class="flex items-center justify-center p-4 md:p-5 border-t border-gray-200 rounded-b dark:border-lime-700"
      >
        <button
          data-modal-hide=`default-modal-${data.id}`
          type="button"
          class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
          >Entendido</button
        >
      </div>
    </div>
  </div>
</div>
